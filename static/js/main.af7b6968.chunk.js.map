{"version":3,"sources":["components/Error.js","components/Pregunta.js","components/Formulario.js","components/Gasto.js","components/Listado.js","helpers.js","components/ControlPresupuesto.js","App.js","serviceWorker.js","index.js"],"names":["Error","mensaje","className","Pregunta","setPresupuesto","setRestante","setMostrarPregunta","useState","cantidad","setCantidad","error","setError","onSubmit","e","preventDefault","isNaN","type","placeholder","onChange","parseInt","target","value","Formulario","setGasto","setCrearGasto","nombre","setNombre","trim","gasto","id","shortid","generate","Gasto","Listado","gastos","map","key","revisarPresupuesto","presupuesto","restante","ControlPresupuesto","App","mostrarPregunta","setGastos","crearGasto","useEffect","nuevoPresupuesto","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.af7b6968.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Error = ({mensaje}) => (\n    <p className=\"alert alert-danger error\">{mensaje}</p>\n);\n\nError.propTypes = {\n    mensaje: PropTypes.string.isRequired\n}\n\nexport default Error;","import React, { Fragment, useState } from 'react';\nimport Error from './Error';\nimport PropTypes from 'prop-types';\n\nconst Pregunta = ({ setPresupuesto, setRestante, setMostrarPregunta }) => {\n    \n    //Definir el state\n    const [ cantidad, setCantidad ] = useState(0);\n\n    const [ error, setError ] = useState(false);\n\n    //Funcion que lee el presupuesto\n    const definirPresupuesto = (e) => {\n        setCantidad(parseInt(e.target.value, 10));\n    }\n\n    //Submit para definir el presupuesto\n    const agregarPresupuesto = e => {\n        e.preventDefault();\n\n        //Validar\n        if(cantidad < 1 || isNaN(cantidad) ){\n            setError(true);\n            return\n        }\n\n        //Si se pasa la validación\n        setError(false);\n        setPresupuesto(cantidad);\n        setRestante(cantidad);\n        setMostrarPregunta(false);\n    }\n    \n    return (  \n    <Fragment>\n        <h2>Coloca tu presupuesto</h2>\n\n        { error ? <Error mensaje=\"El Presupuesto es Incorrecto\" /> : null }\n\n        <form\n            onSubmit={agregarPresupuesto}\n        >\n            <input\n                type=\"number\"\n                className=\"u-full-width\"\n                placeholder=\"Coloca tu presupuesto\"\n                onChange={definirPresupuesto}\n            />\n\n            <input\n                type=\"submit\"\n                className=\"button-priamry u-full-width\"\n                value=\"Definir Presupuesto\"\n            />\n\n\n        </form>\n\n    </Fragment>\n\n)};\n\nPregunta.propTypes = {\n    setPresupuesto: PropTypes.func.isRequired,\n    setRestante: PropTypes.func.isRequired,\n    setMostrarPregunta: PropTypes.func.isRequired \n}\n\nexport default Pregunta;","import React, { useState } from 'react';\nimport Error from './Error';\nimport shortid from 'shortid';\nimport PropTypes from 'prop-types';\n\nconst Formulario = ({setGasto, setCrearGasto}) => {\n\n    const [ nombre, setNombre ] = useState('');\n    const [ cantidad, setCantidad ] = useState(0);\n    const [ error, setError ] = useState(false);\n\n    //cuando el usuario agrega un gasto\n\n    const agregarGasto = e => {\n        e.preventDefault();\n        \n        //validar\n        if(cantidad < 1 || isNaN(cantidad) || nombre.trim() === '' ){\n            setError(true);\n            return\n        }\n        setError(false);\n\n        //construir el gasto\n        const gasto = {\n            nombre,\n            cantidad,\n            id: shortid.generate()\n        }\n\n        //pasar el gasto al componente principal\n        setGasto(gasto);\n        setCrearGasto(true);\n    \n        //reset del formulario\n        setCantidad(0);\n        setNombre('');\n    }\n\n    return ( \n        <form\n            onSubmit={agregarGasto}\n        >\n            <h2>Agrega tus gastos aquí</h2>\n\n            { error ? <Error mensaje=\"Ambos campos son obligatorios, o presupuesto incorrecto\" /> : null }    \n            <div className=\"campo\">\n                <label>Nombre Gasto</label>\n                <input\n                    type=\"text\"\n                    className=\"u-full-width\"\n                    placeholder=\"Ej. Transporte\"\n                    value={nombre}\n                    onChange={e => setNombre(e.target.value)}\n                />\n            </div>\n            <div className=\"campo\">\n                <label>Cantidad Gasto</label>\n                <input\n                    type=\"number\"\n                    className=\"u-full-width\"\n                    placeholder=\"Ej. 300\"\n                    value={cantidad}\n                    onChange={e=> setCantidad(e.target.value)}\n                />\n            </div>\n            <input\n                type=\"submit\"\n                className=\"button-primary u-full-width\"\n                value=\"Agregar Gasto\"\n            />\n        </form>\n    );\n}\n \nFormulario.propTypes = {\n    setGasto: PropTypes.func.isRequired,\n    setCrearGasto: PropTypes.func.isRequired,\n}\n\nexport default Formulario;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Gasto = ({gasto}) => ( \n    <li className=\"gastos\">\n        <p>\n            {gasto.nombre}\n            <span className=\"gasto\">{gasto.cantidad}</span>\n        </p>\n    </li>\n);\n\nGasto.propTypes = {\n    gasto: PropTypes.object.isRequired\n}\n \nexport default Gasto;","import React from 'react';\nimport Gasto from './Gasto';\nimport PropTypes from 'prop-types';\n\nconst Listado = ({gastos}) => ( \n    <div className=\"gastos-realizados\">\n        <h2>Listado</h2>\n        {gastos.map( gasto => (\n            <Gasto \n                key={gasto.id}\n                gasto={gasto}\n            />\n        ))}\n    </div>\n);\n\nListado.propTypes = {\n    gastos: PropTypes.object.isRequired\n}\n\nexport default Listado;","export const revisarPresupuesto = (presupuesto, restante) => {\n    let clase;\n\n    if( (presupuesto / 4) > restante ){\n        clase = 'alert alert-danger';\n    }else if( (presupuesto / 2) > restante ){\n        clase = 'alert alert-warning';\n    } else{\n        clase = 'alert alert-success';\n    }\n\n    return clase;\n}","import React, { Fragment } from 'react';\nimport { revisarPresupuesto } from '../helpers';\nimport PropTypes from 'prop-types';\n\nconst ControlPresupuesto = ({ presupuesto, restante }) => ( \n    <Fragment>\n        <div className=\"alert alert-primary\">\n            Presupuesto: {presupuesto}\n        </div>\n        <div className={revisarPresupuesto(presupuesto, restante)}>\n            Restante: {restante}\n        </div>  \n    </Fragment>\n);\n\nControlPresupuesto.propTypes = {\n    presupuesto: PropTypes.number.isRequired,\n    restante: PropTypes.number.isRequired\n} \n\nexport default ControlPresupuesto;","import React, { useState, useEffect } from 'react';\nimport Pregunta from './components/Pregunta';\nimport Formulario from './components/Formulario';\nimport Listado from './components/Listado';\nimport ControlPresupuesto from './components/ControlPresupuesto';\n\n\nfunction App() {\n\n\t//Definir el State\n\tconst [ presupuesto, setPresupuesto ] = useState(0);\n\tconst [ restante, setRestante ] = useState(0);\n\tconst [ mostrarPregunta, setMostrarPregunta ] = useState(true);\n\tconst [ gastos, setGastos ] = useState([]);\n\tconst [ gasto, setGasto ] = useState({});\n\tconst [ crearGasto, setCrearGasto ] = useState(false);\n\n\t//definir el UseEffect que acualice el restante\n\tuseEffect( () => {\n\t\tif(crearGasto){\n\t\t\t//agrega el nuevo gasto\n\t\t\tsetGastos([ ...gastos, gasto ]);\n\n\t\t\t//calcula el nuevo presupuesto\n\t\t\tconst nuevoPresupuesto = restante - gasto.cantidad;\n\t\t\tsetRestante(nuevoPresupuesto);\n\n\t\t\t//reset a false\n\t\t\tsetCrearGasto(false);\n\t\t}\n\t}, [gasto, crearGasto, gastos, restante]);\n\n\treturn (\n\t\t<div className=\"container\">\n\t\t<header>\n\t\t\t<h1>Gasto  Semanal</h1>\n\n\t\t\t<div className=\"contenido-principal contenido\">\n\n\t\t\t\t{ mostrarPregunta \n\t\t\t\t? (\n\t\t\t\t\t<Pregunta \n\t\t\t\t\tsetPresupuesto={setPresupuesto}\n\t\t\t\t\tsetRestante={setRestante}\n\t\t\t\t\tsetMostrarPregunta={setMostrarPregunta}\n\t\t\t\t/>\n\t\t\t\t) : (\n\t\t\t\t\t<div className=\"row\">\n\t\t\t\t\t\t<div className=\"one-half column\">\n\t\t\t\t\t\t\t<Formulario \n\t\t\t\t\t\t\t\tsetGasto={setGasto}\n\t\t\t\t\t\t\t\tsetCrearGasto={setCrearGasto}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"one-half column\">\n\t\t\t\t\t\t\t<Listado \n\t\t\t\t\t\t\t\tgastos={gastos}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<ControlPresupuesto\n\t\t\t\t\t\t\t\tpresupuesto={presupuesto}\n\t\t\t\t\t\t\t\trestante={restante}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t</header>\n\t\t</div>\n\t);\n\t}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}